---
import SvgBorder from "./ui/SvgBorder.astro";
const { project } = Astro.props;
---

    <a href={`/projects/${project.id}`} class="project__link">
        <div class="project__content">
            <figure class="project__image-container">
                {
                    project.data.image && project.data.image.url ? (
                        <img
                            class="project__image"
                            src={project.data.image.url}
                            alt=""
                            width="300"
                            height="200"
                        />
                    ) : (
                        <img
                            class="project__image"
                            src="/assets/images/fallback-image.png"
                            alt=""
                            loading="lazy"
                            width="300"
                            height="200"
                        />
                    )
                }
            </figure>
            <div class="project__text">
                <h3 class="project__text-title">{project.data.title}</h3>
                <p class="project__description">{project.data.description}</p>
            </div>

            <div class="project__tags">
                {
                    project.data.tags
                        .filter((tag) => tag.trim() !== "")
                        .map((tag) => <span class="project__tag">{tag}</span>)
                }
            </div>
        </div>
    </a>
</li>

<style>
    .project__link {
        color: inherit;
        cursor: pointer;
        text-decoration: none;
    }

    .project__content {
        background: var(--c-blue--light);
        border-radius: var(--b-radius--large);
        box-shadow: 0px 8px 20px 0px rgba(91, 74, 66, 0.3); /* Fallback shadow */
        box-shadow: 0px 8px 20px 0px
            color-mix(in srgb, var(--c-charcoal) 20%, transparent);
        display: flex;
        flex-direction: column;
        gap: var(--p-gutter);
        height: 100%;
        padding: var(--p-gutter);
        width: 100%;
    }

    .project__image-container {
        aspect-ratio: 16 / 11;
        background: var(--c-beige);
        border-radius: var(--b-radius);
        width: 100%;
    }

    .project__image {
        border-radius: var(--b-radius);
        height: 100%;
        object-fit: cover;
        width: 100%;
    }

    .project__text {
        display: flex;
        flex-direction: column;
        flex-grow: 1;
        gap: var(--p-gutter);
        overflow: hidden;
        text-align: center;
    }

    .project__text-title {
        color: var(--c-charcoal);
        transition: font-size 0.2s ease-out;
    }

    .project__description {
        display: none;
    }

    .project__tags {
        display: flex;
        flex-wrap: wrap;
        gap: var(--p-gutter--small);
        justify-content: center;
    }

    .project__tag {
        background: var(--c-pink);
        border-radius: var(--b-radius--xsmall);
        color: var(--c-beige);
        font-size: var(--font-size-text-small);
        font-weight: var(--font-weight-semibold);
        padding: var(--p-gutter--xsmall);
    }

    .project__tag:nth-child(3n + 1) {
        background: var(--c-pink);
    }

    .project__tag:nth-child(3n + 2) {
        background: var(--c-green--dark);
    }
    
    .project__tag:nth-child(3n) {
        background: var(--c-blue--dark);
    }

    @media (min-width: 1080px) {
        .project__description {
            display: block;
        }
    }

    @media (max-height: 768px) {
        .project__description {
            display: none;
        }
    }
</style>
