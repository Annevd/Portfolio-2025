---
import { getCollection } from "astro:content";
import Project from "./Project.astro";

let projects = await getCollection("projects");

projects.sort((a, b) => {
    const dateA = new Date(String(a.data.date ?? "")).getTime();
    const dateB = new Date(String(b.data.date ?? "")).getTime();
    return dateB - dateA;
});
---

<section
    id="projects"
    class="cards"
    style={`
    --card-count: ${projects.length}; 
    height: ${projects.length * 65}lvh; 
    timeline-scope: ${projects.map((_, i) => `--trigger-${i}`).join(", ")};
    --trigger-last: --trigger-${projects.length - 1};
    --trigger-1: --trigger-1;`}
>
    <div class="card-scroll-triggers">
        {
            projects.map((_, i) => (
                <div style={`view-timeline: --trigger-${i};`} />
            ))
        }
    </div>

    <h2 class="cards__title">
        Featured<br /> Work
    </h2>

    <ul class="cards__inner">
        {
            projects.map((project, i) => (
                <li
                    class="card"
                    style={`--animation-timeline: --trigger-${i};`}
                >
                    <Project project={project} />
                </li>
            ))
        }
    </ul>
</section>

<style>
    .cards {
        height: calc(var(--card-count) * 65lvh); /* fallback */
        padding: 0;
        position: relative;
        width: 100%;
    }

    .card-scroll-triggers {
        bottom: 100lvh;
        display: flex;
        flex-direction: column;
        left: 0;
        position: absolute;
        top: 0;
    }

    .cards__title {
        position: sticky;
        text-align: center;
        top: 1rem;
        z-index: 2;
    }

    .card-scroll-triggers div {
        background: var(--color);
        flex-grow: 1;
        padding: 0.2em;
        text-align: center;
        width: 100%;
        writing-mode: vertical-rl;
    }

    .cards__inner {
        align-items: center;
        display: flex;
        flex-direction: column;
        gap: 1rem;
        height: 110lvh;
        justify-content: center;
        overflow-x: hidden;
        position: sticky;
        top: 0;
    }

    .card {
        --rotate: -10deg;
        aspect-ratio: 3/4;
        max-height: clamp(350px, 71vh, 600px);
        max-width: clamp(300px, 40vw, 600px);
        min-width: clamp(250px, 30vw, 400px);
        position: absolute;
        rotate: rotate(var(--rotate));
        top: unset; /* cancel out the sticky top so it defaults back to the flex center */
    }

    .card:nth-of-type(1) {
        --rotate: 0;
        transform: translateX(0);
    }

    .card:not(:nth-of-type(1)) {
        --rotate: -10deg;
        transform: translateX(-100vw);
    }

    .card:nth-of-type(odd):not(:nth-of-type(1)) {
        --rotate: 10deg;
        transform: translateX(100vw);
    }

    @supports (animation-timeline: view()) {
        @media (prefers-reduced-motion: no-preference) {
            .card:not(:nth-of-type(1)) {
                animation-fill-mode: both;
                animation-name: to-center;
                animation-range: entry 100lvh exit;
                animation-timeline: var(--animation-timeline);
            }

            .cards__title {
                animation: fadeOut ease forwards;
                animation-range: exit 0% exit 100%;
                animation-timeline: var(--trigger-last);
            }
        }

    }

    @media (min-height: 900px) {
        .cards__inner {
            height: 100lvh;
        }
    }

    @keyframes fadeOut {
        to {
            opacity: 0;
            transform: translateY(-150%);
        }
    }

    @keyframes to-center {
        70% {
            rotate: calc(var(--rotate) * 0.5);
        }
        100% {
            rotate: calc(var(--rotate) * 0.5);
            transform: translateX(0);
        }
    }
</style>

<script>
    import gsap from "gsap";
    import { ScrollTrigger } from "gsap/all";

    gsap.registerPlugin(ScrollTrigger);

    const needsGSAP = !CSS.supports("animation-timeline", "view()");
    // const needsGSAP = true; // to test the fallback animations

    const cards = document.querySelector(".cards");

    const allCards = cards.querySelectorAll(".card");

    const scrollTicks = cards.querySelectorAll(".card-scroll-triggers div");

    if (needsGSAP) {
        console.warn(`
      [ðŸ¦–] This portfolio uses the latest CSS features,
      like scroll driven animations (https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_scroll-driven_animations) 
      and view transitions (https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API), 
      your browser does not support (all of) them. \n\nI've added fallback animations, 
      but for the best experience, please consider using a modern chromium-based browser.`);

        scrollTicks.forEach((tick, index) => {
            console.log(tick);
            if (index === 0) return; // Skip the first card
            const tl = gsap.timeline({
                scrollTrigger: {
                    trigger: tick,
                    invalidateOnRefresh: true,
                    start: "top top",
                    end: "bottom top",
                    scrub: window.innerWidth > 1024 ? true : false, // remove scrub on mobile (plays at a certain point in stead over a range)
                    toggleActions: "play none play reverse", // use toggleActions for mobile
                },
            });
            const multiplier = index % 2 ? -1 : 1; // checks if index is dividable by 2 (even) or not (odd)
            tl.set(allCards[index], {
                rotate: index != 0 ? 10 * multiplier : 0,
                duration: 0.25,
            });
            tl.to(allCards[index], {
                rotate: index != 0 ? 5 * multiplier : 0,
                x: 0,
                duration: 0.25,
            });
        });

        const heading = cards.querySelector(".cards__title");
        const lastTrigger = scrollTicks[scrollTicks.length - 1];

        gsap.to(heading, {
            scrollTrigger: {
                trigger: lastTrigger,
                start: "top center",
                end: "top top",
                scrub: window.innerWidth > 1024 ? true : false,
                toggleActions: "play none play reverse",
            },
            opacity: 0,
            y: "-150%",
            ease: "power1.out",
        });
    }
</script>
